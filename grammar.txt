TERMINALS:

PLUS
MINUS
STAR
SLASH
LPAR
RPAR
SEMICOLON
EQUALS
PERCENT

COMP_EQUALS
COMP_LT
COMP_LTE
COMP_GT
COMP_GTE
COMP_NE

LBRACE
RBRACE

NUMBER
IDENTIFIER
STRING

PRINT
LET
OR
AND
NOT
IF
ELSE
WHILE
DO

EOF

---------------------------------------------
GRAMMAR:

script -> statement* EOF

statement -> LBRACE statement* RBRACE
           | expression SEMICOLON
           | LET IDENTIFIER [EQUALS expression] SEMICOLON
           | PRINT expression SEMICOLON
           | ifStatement
           | whileStatement
           | doWhileStatement

ifStatement -> IF LPAR expression RPAR statement [else statement]

whileStatement -> WHILE LPAR expression RPAR statement
doWhileStatement -> DO statement WHILE LPAR expression RPAR SEMICOLON

expression -> IDENTIFIER EQUALS expression | disjunction

disjunction -> conjunction | disjunction OR conjunction

conjunction -> inversion | conjunction AND inversion

inversion -> comparison | NOT inversion

comparison -> arithmatic (compOp arithmatic)*
compOp -> COMP_EQUALS | COMP_LT | COMP_LTE | COMP_GT | COMP_GTE | COMP_NE

arithmatic -> term | arithmatic PLUS term | arithmatic MINUS term

term -> factor | term STAR factor | term SLASH factor | term PERCENT factor

factor -> MINUS* (IDENTIFIER | NUMBER | LPAR expression RPAR | STRING)

---------------------------------------------
GRAMMAR WITHOUT LEFT RECURSION:

script -> statement* EOF

statement -> LBRACE statement* RBRACE
           | PRINT expression SEMICOLON
           | LET IDENTIFIER [EQUALS expression] SEMICOLON
           | expression SEMICOLON
           | ifStatement
           | whileStatement
           | doWhileStatement

ifStatement -> IF LPAR expression RPAR statement [ELSE statement]

whileStatement -> WHILE LPAR expression RPAR statement
doWhileStatement -> DO statement WHILE LPAR expression RPAR SEMICOLON

expression -> IDENTIFIER EQUALS expression | disjunction

disjunction -> conjunction (OR conjunction)*

conjunction -> inversion (AND inversion)*

inversion -> comparison | NOT inversion

comparison -> arithmatic (compOp arithmatic)*
compOp -> COMP_EQUALS | COMP_LT | COMP_LTE | COMP_GT | COMP_GTE | COMP_NE

arithmatic -> term [rightExpression]
rightExpression -> PLUS term [rightExpression] | MINUS term [rightExpression]

term -> factor [rightTerm]
rightTerm -> STAR factor [rightTerm] | SLASH factor [rightTerm] | PERCENT factor [rightTerm]

factor -> MINUS* (IDENTIFIER | NUMBER | LPAR expression RPAR | STRING)